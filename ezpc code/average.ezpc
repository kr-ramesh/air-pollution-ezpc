uint32 dim = 270;

def bool_bl check1(bool_bl[dim] x2, uint32_bl threshold)
{
  uint32_bl count=0;
  for i=[0:dim]
  {
    count= count + ((x2[i]) ? (1) : (0); 
  };
  return count>threshold;
}

def uint32_bl sum(uint32_bl[dim] x1, bool_bl[dim] x2) 
{
  uint32_bl resultfinal;
	for i=[0:dim]
  {
    resultfinal[i]= (resultfinal[i] + ((x2[i]) ? (x1[i]) : (0)));
  };
  return resultfinal;
}

def void main ()
{
  input(SERVER, grid1, uint32_bl[dim]);
  input(SERVER, bool1, bool_bl[dim]);
  input(SERVER, randnum, uint32_bl);

  input(CLIENT, grid2, uint32_bl[dim]);
  input(CLIENT, bool2, bool_bl[dim]);

  uint32_bl grid[dim];
  for i=[0:dim]
  {
    grid[i]=grid1[i]+grid2[i];
  };

  bool_bl clientbool[dim];

  for i=[0:dim]
  {
    clientbool[i]=bool1[i]^bool2[i];
  };

  bool_bl firstcheck=check1(clientbool, 2);
  
  uint32_bl result=(firstcheck) ? (sum(grid, clientbool)) : (0);

  output(CLIENT, result-randnum);
}

